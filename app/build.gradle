apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'de.mannodermaus.android-junit5'

kapt {
    correctErrorTypes true
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.example.android.capitalcityquizktx"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.jetbrains.kotlinx:kotlinx-coroutines') {
                details.useVersion "$version_coroutine"
                details.because 'Different lib versions from different sources.'
            }
        }

        resolutionStrategy {
            force("net.bytebuddy:byte-buddy-agent:1.9.10")
            force("org.objenesis:objenesis:2.6")
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
}

ext {
    version_coroutine = "1.3.0-M1"
    version_core = "1.5.0"
    version_constraint_layout = "1.1.3"
    version_fragment = '1.2.2'
    version_lifecycle_extensions = "2.0.0"
    version_room = "2.3.0"
    koin_version = "3.1.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
    implementation "net.bytebuddy:byte-buddy:1.10.5"

    // Retrofit's
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'

    // DI
    implementation "io.insert-koin:koin-android:$koin_version"

    // RX
    implementation "io.reactivex.rxjava2:rxjava:2.1.8"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
    implementation 'com.android.support:multidex:1.0.3'

    // Android KTX
    implementation "androidx.core:core-ktx:$version_core"

    // Room and Lifecycle dependencies
    //noinspection GradleDependency
    implementation "androidx.room:room-runtime:$version_room"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor  "androidx.room:room-compiler:$version_room"
//    annotationProcessor  "android.arch.persistence.room:compiler:$version_room"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutine"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutine"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    implementation "com.squareup.okhttp3:logging-interceptor:3.8.0"
    implementation 'com.basgeekball:awesome-validation:4.2'

    // Testing
    debugImplementation "androidx.fragment:fragment-testing:$version_fragment"
    testImplementation 'com.willowtreeapps.assertk:assertk-jvm:0.20'
    testImplementation 'com.github.marcinOz:TestCoroutineRule:1.0.1'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'android.arch.persistence.room:testing:1.0.0'
    testImplementation "io.insert-koin:koin-test-junit5:$koin_version"
    testImplementation 'org.mockito:mockito-core:3.7.7'
//    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
//    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.2"
    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    androidTestImplementation 'org.mockito:mockito-android:3.7.7'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation ("io.insert-koin:koin-test-junit5:$koin_version") {
        exclude group: 'org.mockito', module: 'mockito-inline'
    }
    androidTestImplementation("androidx.test:runner:1.3.0")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.7.2")
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.2.2")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.2.2")
}